package com.aaronespiritu.adespiri_feelsbook;

import android.app.DatePickerDialog;
import android.app.TimePickerDialog;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.graphics.Color;
import android.graphics.drawable.ColorDrawable;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.DatePicker;
import android.widget.TextView;
import android.widget.TimePicker;
import android.widget.Toast;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;

import java.util.Calendar;

public class DateEdit extends AppCompatActivity {
    /*
        This activity provides the user an interface to adjust the date and time of an already
        recorded emotion. Skeleton code and understanding of the datepicker was found from youtube user
        'CodingWithMitchell' https://www.youtube.com/watch?v=hwe1abDO2Ag
     */
    private TextView displayDate;
    private DatePickerDialog.OnDateSetListener dateSetListener;
    private TextView displayTime;
    private TimePickerDialog.OnTimeSetListener timeSetListener;

    private int year;
    private int month;
    private int day;
    private int hour;
    private int minute;
    private int second;

    SharedPreferences sharedpreferences;
    String serializedString;
    Emotion_List emotionList;
    int arrayPosition;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.dateedit);
        displayDate = (TextView) findViewById(R.id.dateTextView);
        displayTime = (TextView) findViewById(R.id.timeTextView);
        sharedpreferences = getSharedPreferences("MyPrefs", Context.MODE_PRIVATE);

        //set click listener. We want to launch a popup when the user taps on the date box
        displayDate.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Calendar calendar = Calendar.getInstance();
                year = calendar.get(Calendar.YEAR);
                month = calendar.get(Calendar.MONTH);
                day = calendar.get(Calendar.DAY_OF_MONTH);

                DatePickerDialog dialog = new DatePickerDialog(DateEdit.this,
                        android.R.style.Theme_Material_Light_Dialog, dateSetListener,
                        year, month, day);
                dialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.WHITE));
                dialog.show();
            }
        });

        dateSetListener = new DatePickerDialog.OnDateSetListener() {
            @Override //autogenerated
            public void onDateSet(DatePicker view, int newYear, int newMonth, int dayOfMonth) {
                year = newYear;
                month = newMonth + 1; // datepicker is zero indexed so January would be month 0 etc.
                day = dayOfMonth;

                String dateString = year + "-" + month + "-" + day;
                displayDate.setText(dateString);
            }
        };

        displayTime.setOnClickListener(new View.OnClickListener() { //very similar to the above code but just for time
            @Override
            public void onClick(View v) {
                Calendar calendar = Calendar.getInstance();
                hour = calendar.get(Calendar.HOUR);
                minute = calendar.get(Calendar.MINUTE);
                second = calendar.get(Calendar.SECOND);

                TimePickerDialog dialog = new TimePickerDialog(DateEdit.this,
                        android.R.style.Theme_DeviceDefault_Light_Dialog, timeSetListener,
                        hour, minute, false);
                dialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.WHITE));
                dialog.show();
            }
        });

        timeSetListener = new TimePickerDialog.OnTimeSetListener() {
            @Override
            public void onTimeSet(TimePicker view, int hourOfDay, int minuteOfHour) {
                hour = hourOfDay;
                minute = minuteOfHour;

                String timeString = hourOfDay + ":" + minuteOfHour + ":" + second;
                displayTime.setText(timeString);
            }
        };

    }

    @Override
    protected void onResume()
    {
        super.onResume();
        //retrieve the passed off emotionList
        Gson gson = new Gson();

        Intent intent = getIntent();
        serializedString = sharedpreferences.getString("listkey", "");
        emotionList = gson.fromJson(serializedString, new TypeToken<Emotion_List>(){}.getType());
        emotionList.consolidateEmotions();
        arrayPosition = intent.getIntExtra("ARRAYPOSITION", 0);

        setDateText(arrayPosition); //initilize these to the object's current date and time
        setTimeText(arrayPosition);

    }

    private void setDateText(int position)
    {
        Emotion emotion = emotionList.getEmotionList().get(position);
        String dateString = emotion.getDate();
        String[] temp = dateString.split("T"); //separate date from time first since format is yyyy-MM-ddThh:mm:ss
        String[] parsedDate = temp[0].split("-");
        year = Integer.parseInt(parsedDate[0]); //allocate the year month and date and set text
        month = Integer.parseInt(parsedDate[1]);
        day = Integer.parseInt(parsedDate[2]);

        //we want to have the trailing zero. we need to add it back if it was gotten rid of
        String yearString = Integer.toString(year);
        String monthString= Integer.toString(month);
        String dayString = Integer.toString(day);
        if (year < 10) {yearString = "0" + year;}
        if (month < 10) {monthString = "0" + month;}
        if (day < 10) {dayString = "0" + day;}

        displayDate.setText(yearString + "-" + monthString + "-" + dayString);

    }

    private void setTimeText(int position)
    {
        Emotion emotion = emotionList.getEmotionList().get(position);
        String dateString = emotion.getDate();
        String[] temp = dateString.split("T"); //separate date from time first since format is yyyy-MM-ddThh:mm:ss
        String[] parsedDate = temp[1].split(":");
        hour = Integer.parseInt(parsedDate[0]); //allocate the minute and hour and second
        minute = Integer.parseInt(parsedDate[1]);
        second = Integer.parseInt(parsedDate[2]);

        //we want to have the trailing zero. we need to add it back if it was gotten rid of
        String hourString = Integer.toString(hour);
        String minuteString= Integer.toString(minute);
        String secondString = Integer.toString(second);
        if (hour < 10) {hourString = "0" + hour;}
        if (minute < 10) {minuteString = "0" + minute;}
        if (second < 10) {secondString = "0" + second;}

        displayTime.setText(hourString + ":" + minuteString + ":" + secondString);

    }

    public void backToHistory(View view)
    {
        Emotion emotion = emotionList.getEmotionList().get(arrayPosition);
        setNewDate();

        //save data using gson and shared preferences
        emotionList.organizeEmotions();
        Gson gson = new Gson();
        String serializedEmotionList = gson.toJson(emotionList);
        SharedPreferences.Editor editor = sharedpreferences.edit();

        editor.remove("listkey").commit();
        editor.putString("listkey", serializedEmotionList);

        editor.commit();
        finish(); //remove from activity stack
    }

    private void setNewDate()
    {
        emotionList.consolidateEmotions();
        emotionList.sortEmotions();

        Emotion emotion = emotionList.getEmotionList().get(arrayPosition);
        //we want to have the trailing zero. we need to add it back if it was gotten rid of
        String hourString = Integer.toString(hour);
        String minuteString= Integer.toString(minute);
        String secondString = Integer.toString(second);
        String yearString = Integer.toString(year);
        String monthString= Integer.toString(month);
        String dayString = Integer.toString(day);

        if (hour < 10) {hourString = "0" + hour;}
        if (minute < 10) {minuteString = "0" + minute;}
        if (second < 10) {secondString = "0" + second;}
        if (year < 10) {yearString = "0" + year;}
        if (month < 10) {monthString = "0" + month;}
        if (day < 10) {dayString = "0" + day;}


        //get the emotion and create the new dateString
        String newDateString = yearString + "-" + monthString + "-" + dayString  + "T" + hourString + ":" + minuteString + ":" + secondString;
        emotion.setDate(newDateString);
    }
}


